import java.util.Arrays;

public class RadixSort {

	public static void main(String[] args) {
		int[] arr = { 3213, 1322, 123, 221, 9731, 233, 92, 23, 9, 85181 };

		int max = arr[0];
		for (int i : arr) {
			if (max < i) {
				max = i;
			}
		}

		long start = System.currentTimeMillis();

		max = String.valueOf(1234567890).length();

		long end = System.currentTimeMillis();

		int num = 1234567890;
		int digitCount = 0;
		while (num > 0) {
			num /= 10;
			digitCount++;
		}
		max = digitCount;
		long end1 = System.currentTimeMillis();

		System.out.println(end - start);
		System.out.println(end1 - end);

		int[] result = new int[arr.length];

		for (int i = 0; i <= max; i++) {
			for (int element : arr) {

			}
		}

		int[] helpArr = new int[10];

	}

	static int digitAtPos(int theDigit, int thePos) {
		for (int i = 0; i < thePos; i++) {
			theDigit /= 10;
		}
		return theDigit % 10;
	}

	static void countingSort(int[] arr) {
		int max = arr[0];
		int min = arr[0];

		for (int i : arr) {
			if (i > max) {
				max = i;
			}
			if (i < min) {
				min = i;
			}
		}

		int[] countArr = new int[max - min + 1];

		for (int i : arr) {
			countArr[i - min]++;
		}
		System.out.println(Arrays.toString(countArr));

		int position = 0;
		for (int i = 0; i < countArr.length; i++) {
			for (int j = 0; j < countArr[i]; j++) {
				arr[position] = i + min;
				position++;
			}
		}
	}

}
